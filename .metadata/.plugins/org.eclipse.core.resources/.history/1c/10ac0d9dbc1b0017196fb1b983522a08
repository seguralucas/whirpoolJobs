package exit.services.principal;

import java.io.File;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;
import com.jcraft.jsch.UserInfo;

import exit.services.fileHandler.CSVHandler;
import exit.services.singletons.entidadesARecuperar.SFTPPropiedades;

public class SFTP {
	
	private SFTPPropiedades sftpPropiedades;
	
	
	public SFTP(SFTPPropiedades sftpPropiedades) {
		this.sftpPropiedades=sftpPropiedades;
	}
	


	public void transferirFichero(String pathInput, String pathOutput) {
    try {
    JSch jsch = new JSch();
    String user = sftpPropiedades.getUser();
    String host = sftpPropiedades.getHost();
    int port = sftpPropiedades.getPuerto();
    String privateKey = sftpPropiedades.getKeyFile();

    jsch.addIdentity(privateKey);
    Session session = jsch.getSession(user, host, port);
    java.util.Properties config = new java.util.Properties(); 
    config.put("StrictHostKeyChecking", "no");
    session.setConfig(config);

    // disabling StrictHostKeyChecking may help to make connection but makes it insecure
    // see http://stackoverflow.com/questions/30178936/jsch-sftp-security-with-session-setconfigstricthostkeychecking-no
    // 
    // java.util.Properties config = new java.util.Properties();
    // config.put("StrictHostKeyChecking", "no");
    // session.setConfig(config);

    session.connect();

    Channel channel = session.openChannel("sftp");
    channel.setInputStream(System.in);
    channel.setOutputStream(System.out);
    channel.connect();
    System.out.println("Conexión exitosa con el SFTP");

    ChannelSftp c = (ChannelSftp) channel;

    String fileName = "Configuracion/whirlpool-public.ppk";
    c.put(fileName, "/home/cli/compracierta_scp/tt2.txt");
    c.exit();
    session.disconnect();
    System.out.println("Transferencia correcta");

	} catch (Exception e) {
	    e.printStackTrace();
	    CSVHandler csv= new CSVHandler();
	    csv.escribirErrorException(e.getStackTrace());
	}
	}


public SFTPPropiedades getSftpPropiedades() {
	return sftpPropiedades;
}



public void setSftpPropiedades(SFTPPropiedades sftpPropiedades) {
	this.sftpPropiedades = sftpPropiedades;
}

}
